pub mod riscv;
pub mod elf;

use riscv::{RISCVMachineTrait, RISCVMachine, FlowControl};
use elf::ELFLoaderTrait;

const ECALL_CATEGORY_PANIC: u32 = 1;
const ECALL_CATEGORY_RETURN: u32 = 2;

const IN_ORIGIN: u32 = 0x10000000;
const IN_FUNCT_NAME_LEN_OFFSET : u32 = IN_ORIGIN + 0;
const IN_FUNCT_NAME_OFFSET : u32 = IN_FUNCT_NAME_LEN_OFFSET + 4;
const IN_FUNCT_ARGS_LEN_OFFSET : u32 = IN_FUNCT_NAME_OFFSET + 255;
const IN_FUNCT_ARGS_OFFSET : u32 = IN_FUNCT_ARGS_LEN_OFFSET + 4;

fn main() -> u32 {
    // Below is the compiled version of the following program:
    let arr: Array<u8> = array![
        0x7F, 0x45, 0x4C, 0x46, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0xF3, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x34, 0x00, 0x00, 0x00, 0x3C, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x20, 0x00, 0x04, 0x00, 0x28, 0x00, 0x0A, 0x00, 0x09, 0x00, 0x01, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x38, 0x10, 0x00, 0x00, 0x38, 0x10, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xEC, 0x10, 0x00, 0x00, 0x38, 0x10, 0x00, 0x20, 0x38, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0xC8, 0xEF, 0x9F, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xEC, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0xE5, 0x74, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x11, 0x01, 0x00, 0x13, 0x01, 0x01, 0x04, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x2C, 0x03, 0x26, 0x45, 0x00, 0x83, 0x25, 0xC5, 0x00, 0x93, 0x06, 0x10, 0x00, 0x63, 0x0A, 0xD6, 0x00, 0x63, 0x1A, 0x06, 0x00, 0x63, 0x98, 0x05, 0x00, 0x13, 0x05, 0x10, 0x00, 0x67, 0x80, 0x00, 0x00, 0x63, 0x86, 0x05, 0x00, 0x13, 0x05, 0x00, 0x00, 0x67, 0x80, 0x00, 0x00, 0x83, 0x25, 0x05, 0x00, 0x03, 0xA5, 0x05, 0x00, 0x83, 0xA5, 0x45, 0x00, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFC, 0x23, 0x2E, 0x11, 0x02, 0x23, 0x2C, 0x81, 0x02, 0x23, 0x2A, 0x91, 0x02, 0x23, 0x28, 0x21, 0x03, 0x23, 0x26, 0x31, 0x03, 0x23, 0x24, 0x41, 0x03, 0x23, 0x22, 0x51, 0x03, 0x13, 0x04, 0x05, 0x00, 0x03, 0x2A, 0x85, 0x00, 0x03, 0x25, 0x05, 0x00, 0xB3, 0x06, 0x45, 0x41, 0x93, 0x04, 0x06, 0x00, 0x13, 0x89, 0x05, 0x00, 0x63, 0xF8, 0xC6, 0x06, 0xB3, 0x0A, 0x9A, 0x00, 0x63, 0xE6, 0x4A, 0x0B, 0x93, 0x19, 0x15, 0x00, 0x63, 0xE4, 0x3A, 0x01, 0x93, 0x89, 0x0A, 0x00, 0x93, 0x05, 0x80, 0x00, 0x63, 0xE4, 0x35, 0x01, 0x93, 0x09, 0x80, 0x00, 0x93, 0xC5, 0xF9, 0xFF, 0x93, 0xD5, 0xF5, 0x01, 0x63, 0x0A, 0x05, 0x00, 0x03, 0x26, 0x44, 0x00, 0x23, 0x2C, 0xC1, 0x00, 0x23, 0x20, 0xA1, 0x02, 0x13, 0x05, 0x10, 0x00, 0x23, 0x2E, 0xA1, 0x00, 0x13, 0x05, 0xC1, 0x00, 0x93, 0x06, 0x81, 0x01, 0x13, 0x86, 0x09, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x0C, 0x03, 0x25, 0xC1, 0x00, 0x63, 0x12, 0x05, 0x06, 0x03, 0x25, 0x01, 0x01, 0x23, 0x22, 0xA4, 0x00, 0x23, 0x20, 0x34, 0x01, 0x6F, 0x00, 0xC0, 0x00, 0x03, 0x25, 0x44, 0x00, 0xB3, 0x0A, 0x9A, 0x00, 0x33, 0x05, 0x45, 0x01, 0x93, 0x05, 0x09, 0x00, 0x13, 0x86, 0x04, 0x00, 0x97, 0x10, 0x00, 0x00, 0xE7, 0x80, 0x00, 0xAC, 0x23, 0x24, 0x54, 0x01, 0x83, 0x20, 0xC1, 0x03, 0x03, 0x24, 0x81, 0x03, 0x83, 0x24, 0x41, 0x03, 0x03, 0x29, 0x01, 0x03, 0x83, 0x29, 0xC1, 0x02, 0x03, 0x2A, 0x81, 0x02, 0x83, 0x2A, 0x41, 0x02, 0x13, 0x01, 0x01, 0x04, 0x67, 0x80, 0x00, 0x00, 0x13, 0x05, 0x00, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x3F, 0x03, 0x25, 0x01, 0x01, 0x83, 0x25, 0x41, 0x01, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x3E, 0xB7, 0x15, 0x00, 0x20, 0x03, 0xC0, 0xC5, 0x03, 0xB7, 0x15, 0x00, 0x20, 0x03, 0xA6, 0x85, 0x03, 0x93, 0x05, 0x05, 0x00, 0x37, 0x15, 0x00, 0x20, 0x13, 0x07, 0x05, 0x04, 0x33, 0x06, 0xE6, 0x00, 0xB3, 0x06, 0xB6, 0x00, 0x13, 0x05, 0x00, 0x00, 0x63, 0xEE, 0xC6, 0x00, 0xB7, 0x07, 0x10, 0x00, 0x33, 0x07, 0xF7, 0x00, 0x63, 0x68, 0xD7, 0x00, 0x37, 0x15, 0x00, 0x20, 0x23, 0x2C, 0xD5, 0x02, 0x13, 0x05, 0x06, 0x00, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x23, 0x22, 0x91, 0x00, 0x23, 0x20, 0x21, 0x01, 0x93, 0x04, 0x06, 0x00, 0x13, 0x86, 0x05, 0x00, 0x13, 0x04, 0x05, 0x00, 0x93, 0x05, 0x00, 0x00, 0x13, 0x07, 0x10, 0x00, 0x13, 0x05, 0x40, 0x00, 0x63, 0x08, 0x06, 0x0A, 0x63, 0xC6, 0x04, 0x0A, 0x03, 0xA5, 0x46, 0x00, 0x63, 0x04, 0x05, 0x06, 0x03, 0xA6, 0x86, 0x00, 0x63, 0x00, 0x06, 0x06, 0x37, 0x15, 0x00, 0x20, 0x03, 0x29, 0x85, 0x03, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0x05, 0x04, 0x33, 0x09, 0xB9, 0x00, 0x33, 0x07, 0x99, 0x00, 0x13, 0x05, 0x00, 0x00, 0x63, 0x62, 0x27, 0x07, 0xB7, 0x07, 0x10, 0x00, 0xB3, 0x87, 0xF5, 0x00, 0x93, 0x85, 0x04, 0x00, 0x63, 0xEE, 0xE7, 0x02, 0x83, 0xA5, 0x06, 0x00, 0x37, 0x15, 0x00, 0x20, 0x23, 0x2C, 0xE5, 0x02, 0x63, 0x00, 0x09, 0x04, 0x13, 0x05, 0x09, 0x00, 0x97, 0x10, 0x00, 0x00, 0xE7, 0x80, 0x40, 0x9A, 0x93, 0x85, 0x04, 0x00, 0x13, 0x05, 0x09, 0x00, 0x63, 0x1C, 0x09, 0x00, 0x6F, 0x00, 0x00, 0x03, 0x13, 0x85, 0x04, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0xF1, 0x63, 0x00, 0x05, 0x02, 0x13, 0x07, 0x00, 0x00, 0x23, 0x22, 0xA4, 0x00, 0x13, 0x05, 0x80, 0x00, 0x6F, 0x00, 0x00, 0x02, 0x13, 0x05, 0x00, 0x00, 0x93, 0x85, 0x04, 0x00, 0xE3, 0x14, 0x05, 0xFE, 0x13, 0x07, 0x10, 0x00, 0x23, 0x22, 0xE4, 0x00, 0x13, 0x05, 0x80, 0x00, 0x93, 0x85, 0x04, 0x00, 0x33, 0x05, 0xA4, 0x00, 0x23, 0x20, 0xB5, 0x00, 0x23, 0x20, 0xE4, 0x00, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x83, 0x24, 0x41, 0x00, 0x03, 0x29, 0x01, 0x00, 0x13, 0x01, 0x01, 0x01, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0xD6, 0x13, 0x36, 0x15, 0x00, 0xB3, 0x06, 0xC5, 0x00, 0x13, 0x06, 0xF6, 0xFF, 0x33, 0x77, 0xB6, 0x00, 0x93, 0x07, 0x10, 0x00, 0x13, 0x85, 0x07, 0x00, 0x93, 0x05, 0x07, 0x00, 0x13, 0x86, 0x06, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x10, 0x00, 0xC0, 0x13, 0x01, 0x01, 0xFE, 0x23, 0x2E, 0x11, 0x00, 0x23, 0x2C, 0x81, 0x00, 0x37, 0x05, 0x00, 0x10, 0x03, 0x25, 0x05, 0x00, 0xB7, 0x05, 0x00, 0x10, 0x03, 0xA4, 0x35, 0x10, 0x93, 0x05, 0xD0, 0x00, 0x63, 0x04, 0xB5, 0x06, 0x93, 0x05, 0x30, 0x00, 0x63, 0x10, 0xB5, 0x10, 0xB7, 0x05, 0x00, 0x10, 0x03, 0xC5, 0x45, 0x00, 0x13, 0x06, 0x10, 0x06, 0x63, 0x0A, 0xC5, 0x10, 0x93, 0x05, 0x30, 0x07, 0x63, 0x14, 0xB5, 0x0E, 0x37, 0x05, 0x00, 0x10, 0x13, 0x05, 0x45, 0x00, 0x83, 0x45, 0x15, 0x00, 0x13, 0x06, 0x50, 0x07, 0x63, 0x9A, 0xC5, 0x0C, 0x03, 0x45, 0x25, 0x00, 0x93, 0x05, 0x20, 0x06, 0x63, 0x14, 0xB5, 0x0C, 0x13, 0x05, 0x20, 0x00, 0x63, 0x02, 0xA4, 0x18, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x85, 0xE6, 0x97, 0x12, 0x00, 0x00, 0xE7, 0x82, 0x82, 0x81, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0xC5, 0xE8, 0x6F, 0x00, 0xC0, 0x0B, 0x37, 0x05, 0x00, 0x10, 0x83, 0x45, 0x45, 0x00, 0x13, 0x06, 0x00, 0x07, 0x63, 0x9A, 0xC5, 0x08, 0x13, 0x05, 0x45, 0x00, 0x83, 0x45, 0x15, 0x00, 0x13, 0x06, 0x20, 0x07, 0x63, 0x92, 0xC5, 0x08, 0x83, 0x45, 0x25, 0x00, 0x13, 0x06, 0x50, 0x06, 0x63, 0x9C, 0xC5, 0x06, 0x83, 0x45, 0x35, 0x00, 0x13, 0x06, 0x00, 0x07, 0x63, 0x96, 0xC5, 0x06, 0x83, 0x45, 0x45, 0x00, 0x13, 0x06, 0x50, 0x06, 0x63, 0x90, 0xC5, 0x06, 0x83, 0x45, 0x55, 0x00, 0x13, 0x06, 0xE0, 0x06, 0x63, 0x9A, 0xC5, 0x04, 0x83, 0x45, 0x65, 0x00, 0x13, 0x06, 0x40, 0x06, 0x63, 0x94, 0xC5, 0x04, 0x83, 0x45, 0x75, 0x00, 0x13, 0x06, 0xF0, 0x05, 0x63, 0x9E, 0xC5, 0x02, 0x83, 0x45, 0x85, 0x00, 0x13, 0x06, 0x80, 0x06, 0x63, 0x98, 0xC5, 0x02, 0x83, 0x45, 0x95, 0x00, 0x13, 0x06, 0x50, 0x06, 0x63, 0x92, 0xC5, 0x02, 0x03, 0x46, 0xA5, 0x00, 0x93, 0x05, 0xC0, 0x06, 0x63, 0x1C, 0xB6, 0x00, 0x03, 0x46, 0xB5, 0x00, 0x63, 0x18, 0xB6, 0x00, 0x03, 0x45, 0xC5, 0x00, 0x93, 0x05, 0xF0, 0x06, 0x63, 0x02, 0xB5, 0x06, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x45, 0xEB, 0x97, 0x02, 0x00, 0x00, 0xE7, 0x82, 0xC2, 0x75, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0xC5, 0xEB, 0x13, 0x05, 0x01, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x1E, 0x13, 0x85, 0x45, 0x00, 0x03, 0x46, 0x15, 0x00, 0x93, 0x05, 0x40, 0x06, 0xE3, 0x18, 0xB6, 0xFC, 0x03, 0x45, 0x25, 0x00, 0xE3, 0x14, 0xB5, 0xFC, 0x13, 0x05, 0x20, 0x00, 0x63, 0x0E, 0xA4, 0x0A, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x85, 0xE6, 0x97, 0x02, 0x00, 0x00, 0xE7, 0x82, 0x82, 0x71, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0xC5, 0xE7, 0x6F, 0xF0, 0xDF, 0xFB, 0x73, 0x00, 0x10, 0x00, 0x23, 0x20, 0x01, 0x00, 0x13, 0x05, 0x10, 0x00, 0x23, 0x22, 0xA1, 0x00, 0x23, 0x24, 0x01, 0x00, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0xC5, 0xE9, 0x13, 0x05, 0x01, 0x00, 0x13, 0x06, 0x60, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0xBC, 0x37, 0x05, 0x00, 0x10, 0x93, 0x05, 0x75, 0x10, 0x13, 0x05, 0x01, 0x00, 0x13, 0x06, 0x04, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0xBB, 0x83, 0x26, 0x41, 0x00, 0x03, 0x27, 0x81, 0x00, 0x93, 0x07, 0x20, 0x00, 0x13, 0x85, 0x07, 0x00, 0x93, 0x05, 0x07, 0x00, 0x13, 0x86, 0x06, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x10, 0x00, 0xC0, 0x37, 0x05, 0x00, 0x10, 0x83, 0x45, 0x75, 0x10, 0x13, 0x05, 0x75, 0x10, 0x03, 0x45, 0x15, 0x00, 0xB3, 0x85, 0xA5, 0x40, 0x23, 0x00, 0xB1, 0x00, 0x93, 0x06, 0x20, 0x00, 0x13, 0x07, 0x10, 0x00, 0x93, 0x07, 0x01, 0x00, 0x13, 0x85, 0x06, 0x00, 0x93, 0x05, 0x07, 0x00, 0x13, 0x86, 0x07, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x10, 0x00, 0xC0, 0x37, 0x05, 0x00, 0x10, 0x83, 0x45, 0x75, 0x10, 0x13, 0x05, 0x75, 0x10, 0x03, 0x45, 0x15, 0x00, 0x33, 0x05, 0xB5, 0x00, 0x23, 0x00, 0xA1, 0x00, 0x93, 0x06, 0x20, 0x00, 0x13, 0x07, 0x10, 0x00, 0x93, 0x07, 0x01, 0x00, 0x13, 0x85, 0x06, 0x00, 0x93, 0x05, 0x07, 0x00, 0x13, 0x86, 0x07, 0x00, 0x73, 0x00, 0x00, 0x00, 0x73, 0x10, 0x00, 0xC0, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x07, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x63, 0x16, 0x05, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0x01, 0x13, 0x85, 0x05, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0xFD, 0x13, 0x01, 0x01, 0xFE, 0x23, 0x2E, 0x11, 0x00, 0x23, 0x2C, 0x81, 0x00, 0x13, 0x04, 0x01, 0x02, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x05, 0xEE, 0x23, 0x20, 0xA4, 0xFE, 0x13, 0x05, 0x10, 0x00, 0x23, 0x22, 0xA4, 0xFE, 0x23, 0x28, 0x04, 0xFE, 0x13, 0x05, 0x40, 0x00, 0x23, 0x24, 0xA4, 0xFE, 0x23, 0x26, 0x04, 0xFE, 0x37, 0x15, 0x00, 0x20, 0x93, 0x05, 0x45, 0xF0, 0x13, 0x05, 0x04, 0xFE, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0x06, 0x13, 0x01, 0x01, 0xFD, 0x23, 0x26, 0x11, 0x02, 0x23, 0x24, 0x81, 0x02, 0x13, 0x04, 0x01, 0x03, 0x23, 0x2A, 0xA4, 0xFC, 0x13, 0x05, 0x44, 0xFD, 0x23, 0x28, 0xA4, 0xFE, 0x37, 0x05, 0x00, 0x20, 0x13, 0x05, 0xC5, 0x65, 0x23, 0x2A, 0xA4, 0xFE, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x05, 0xF5, 0x23, 0x2C, 0xA4, 0xFC, 0x13, 0x05, 0x20, 0x00, 0x23, 0x2E, 0xA4, 0xFC, 0x23, 0x24, 0x04, 0xFE, 0x13, 0x05, 0x04, 0xFF, 0x23, 0x20, 0xA4, 0xFE, 0x13, 0x05, 0x10, 0x00, 0x23, 0x22, 0xA4, 0xFE, 0x13, 0x05, 0x84, 0xFD, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x50, 0x13, 0x01, 0x01, 0xFD, 0x23, 0x26, 0x11, 0x02, 0x23, 0x24, 0x81, 0x02, 0x13, 0x04, 0x01, 0x03, 0x03, 0x26, 0x45, 0x01, 0x83, 0x26, 0x05, 0x01, 0x23, 0x26, 0xC4, 0xFE, 0x23, 0x24, 0xD4, 0xFE, 0x03, 0x26, 0xC5, 0x00, 0x83, 0x26, 0x85, 0x00, 0x03, 0x27, 0x45, 0x00, 0x03, 0x25, 0x05, 0x00, 0x23, 0x22, 0xC4, 0xFE, 0x23, 0x20, 0xD4, 0xFE, 0x23, 0x2E, 0xE4, 0xFC, 0x23, 0x2C, 0xA4, 0xFC, 0x23, 0x28, 0xB4, 0xFE, 0x13, 0x05, 0x10, 0x00, 0x23, 0x1A, 0xA4, 0xFE, 0x13, 0x05, 0x84, 0xFD, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0xC4, 0x13, 0x01, 0x01, 0xFA, 0x23, 0x2E, 0x11, 0x04, 0x23, 0x2C, 0x81, 0x04, 0x23, 0x2A, 0x91, 0x04, 0x23, 0x28, 0x21, 0x05, 0x23, 0x26, 0x31, 0x05, 0x23, 0x24, 0x41, 0x05, 0x23, 0x22, 0x51, 0x05, 0x23, 0x20, 0x61, 0x05, 0x23, 0x2E, 0x71, 0x03, 0x23, 0x2C, 0x81, 0x03, 0x23, 0x2A, 0x91, 0x03, 0x23, 0x28, 0xA1, 0x03, 0x23, 0x26, 0xB1, 0x03, 0x13, 0x04, 0x01, 0x06, 0x03, 0x29, 0x05, 0x00, 0x93, 0x84, 0x05, 0x00, 0x13, 0x55, 0x49, 0x00, 0x93, 0x05, 0x10, 0x27, 0x13, 0x0B, 0x70, 0x02, 0x63, 0x6C, 0xB5, 0x0A, 0x13, 0x0B, 0x70, 0x02, 0x93, 0x0B, 0xA4, 0xFC, 0x37, 0x25, 0x00, 0x00, 0x93, 0x09, 0x05, 0x71, 0x37, 0xE5, 0x00, 0x00, 0x13, 0x0A, 0x05, 0x8F, 0x37, 0x15, 0x00, 0x20, 0x13, 0x0C, 0x05, 0xF7, 0x37, 0xE5, 0xF5, 0x05, 0x93, 0x0C, 0xF5, 0x0F, 0x93, 0x0A, 0x09, 0x00, 0x13, 0x05, 0x09, 0x00, 0x93, 0x85, 0x09, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x60, 0x13, 0x09, 0x05, 0x00, 0x93, 0x05, 0x0A, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x48, 0x33, 0x0D, 0x55, 0x01, 0x13, 0x15, 0x0D, 0x01, 0x13, 0x55, 0x05, 0x01, 0x93, 0x05, 0x40, 0x06, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x00, 0x5E, 0x93, 0x1D, 0x15, 0x00, 0x93, 0x05, 0xC0, 0xF9, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0x46, 0x33, 0x05, 0xA5, 0x01, 0xB3, 0x0D, 0xBC, 0x01, 0x83, 0xC5, 0x1D, 0x00, 0x13, 0x15, 0x15, 0x01, 0x13, 0x55, 0x05, 0x01, 0x03, 0xC6, 0x0D, 0x00, 0xA3, 0x8F, 0xBB, 0xFE, 0x33, 0x05, 0xAC, 0x00, 0x83, 0x45, 0x15, 0x00, 0x03, 0x45, 0x05, 0x00, 0x13, 0x0B, 0xCB, 0xFF, 0x23, 0x8F, 0xCB, 0xFE, 0xA3, 0x80, 0xBB, 0x00, 0x23, 0x80, 0xAB, 0x00, 0x93, 0x8B, 0xCB, 0xFF, 0xE3, 0xEC, 0x5C, 0xF7, 0x13, 0x05, 0x30, 0x06, 0x63, 0x70, 0x25, 0x07, 0x13, 0x15, 0x09, 0x01, 0x13, 0x55, 0x05, 0x01, 0x93, 0x05, 0x40, 0x06, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x40, 0x57, 0x93, 0x09, 0x05, 0x00, 0x93, 0x05, 0xC0, 0xF9, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x3F, 0x33, 0x05, 0x25, 0x01, 0x13, 0x15, 0x15, 0x01, 0x13, 0x55, 0x05, 0x01, 0x13, 0x0B, 0xEB, 0xFF, 0xB7, 0x15, 0x00, 0x20, 0x93, 0x85, 0x05, 0xF7, 0x33, 0x85, 0xA5, 0x00, 0x83, 0x45, 0x15, 0x00, 0x03, 0x45, 0x05, 0x00, 0x13, 0x06, 0x54, 0xFA, 0x33, 0x06, 0x66, 0x01, 0xA3, 0x00, 0xB6, 0x00, 0x23, 0x00, 0xA6, 0x00, 0x13, 0x89, 0x09, 0x00, 0x13, 0x05, 0xA0, 0x00, 0x63, 0x7E, 0xA9, 0x00, 0x13, 0x0C, 0xFB, 0xFF, 0x13, 0x05, 0x54, 0xFA, 0x33, 0x05, 0x85, 0x01, 0x93, 0x65, 0x09, 0x03, 0x23, 0x00, 0xB5, 0x00, 0x6F, 0x00, 0x00, 0x03, 0x13, 0x19, 0x19, 0x00, 0x13, 0x0C, 0xEB, 0xFF, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x05, 0xF7, 0x33, 0x05, 0x25, 0x01, 0x83, 0x45, 0x15, 0x00, 0x03, 0x45, 0x05, 0x00, 0x13, 0x06, 0x54, 0xFA, 0x33, 0x06, 0x86, 0x01, 0xA3, 0x00, 0xB6, 0x00, 0x23, 0x00, 0xA6, 0x00, 0x03, 0xA5, 0xC4, 0x01, 0x93, 0x09, 0x54, 0xFA, 0x93, 0x05, 0x70, 0x02, 0x93, 0x7D, 0x15, 0x00, 0x37, 0x0A, 0x11, 0x00, 0x63, 0x84, 0x0D, 0x00, 0x13, 0x0A, 0xB0, 0x02, 0x03, 0xA6, 0x04, 0x00, 0x33, 0x89, 0x85, 0x41, 0xB3, 0x89, 0x89, 0x01, 0x93, 0x15, 0xD5, 0x01, 0x93, 0xDA, 0xF5, 0x01, 0x63, 0x08, 0x06, 0x02, 0x83, 0xAC, 0x44, 0x00, 0xB3, 0x85, 0x2D, 0x01, 0x63, 0xF2, 0x95, 0x03, 0x13, 0x75, 0x85, 0x00, 0x63, 0x10, 0x05, 0x06, 0x03, 0xC5, 0x04, 0x02, 0x13, 0x06, 0x10, 0x00, 0x33, 0x8C, 0xBC, 0x40, 0x63, 0x4E, 0xA6, 0x0A, 0x63, 0x0C, 0x05, 0x0C, 0x6F, 0x00, 0xC0, 0x0C, 0x03, 0xAB, 0x44, 0x01, 0x83, 0xA4, 0x84, 0x01, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x04, 0x00, 0x13, 0x06, 0x0A, 0x00, 0x93, 0x86, 0x0A, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x1D, 0x93, 0x05, 0x05, 0x00, 0x13, 0x05, 0x10, 0x00, 0x63, 0x9C, 0x05, 0x0C, 0x83, 0xA6, 0xC4, 0x00, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x09, 0x00, 0x13, 0x06, 0x09, 0x00, 0xE7, 0x80, 0x06, 0x00, 0x6F, 0x00, 0x00, 0x0C, 0x03, 0xA5, 0x04, 0x01, 0x23, 0x20, 0xA4, 0xFA, 0x13, 0x05, 0x00, 0x03, 0x03, 0xCD, 0x04, 0x02, 0x03, 0xAB, 0x44, 0x01, 0x83, 0xAB, 0x84, 0x01, 0x23, 0xA8, 0xA4, 0x00, 0x13, 0x05, 0x10, 0x00, 0x23, 0x80, 0xA4, 0x02, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x0B, 0x00, 0x13, 0x06, 0x0A, 0x00, 0x93, 0x86, 0x0A, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0xC0, 0x17, 0x63, 0x1E, 0x05, 0x06, 0x33, 0x0C, 0x9C, 0x01, 0x33, 0x05, 0xBC, 0x41, 0x13, 0x0A, 0xA5, 0xFD, 0x13, 0x0A, 0xFA, 0xFF, 0x63, 0x00, 0x0A, 0x12, 0x03, 0xA6, 0x0B, 0x01, 0x93, 0x05, 0x00, 0x03, 0x13, 0x05, 0x0B, 0x00, 0xE7, 0x00, 0x06, 0x00, 0xE3, 0x04, 0x05, 0xFE, 0x6F, 0x00, 0x00, 0x05, 0x93, 0x05, 0x20, 0x00, 0x63, 0x1A, 0xB5, 0x00, 0x13, 0x55, 0x1C, 0x00, 0x13, 0x0C, 0x1C, 0x00, 0x13, 0x5C, 0x1C, 0x00, 0x6F, 0x00, 0xC0, 0x00, 0x13, 0x05, 0x0C, 0x00, 0x13, 0x0C, 0x00, 0x00, 0x03, 0xAB, 0x44, 0x01, 0x83, 0xAB, 0x84, 0x01, 0x83, 0xA4, 0x04, 0x01, 0x93, 0x0C, 0x15, 0x00, 0x93, 0x8C, 0xFC, 0xFF, 0x63, 0x8C, 0x0C, 0x04, 0x03, 0xA6, 0x0B, 0x01, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x04, 0x00, 0xE7, 0x00, 0x06, 0x00, 0xE3, 0x04, 0x05, 0xFE, 0x13, 0x05, 0x10, 0x00, 0x83, 0x20, 0xC1, 0x05, 0x03, 0x24, 0x81, 0x05, 0x83, 0x24, 0x41, 0x05, 0x03, 0x29, 0x01, 0x05, 0x83, 0x29, 0xC1, 0x04, 0x03, 0x2A, 0x81, 0x04, 0x83, 0x2A, 0x41, 0x04, 0x03, 0x2B, 0x01, 0x04, 0x83, 0x2B, 0xC1, 0x03, 0x03, 0x2C, 0x81, 0x03, 0x83, 0x2C, 0x41, 0x03, 0x03, 0x2D, 0x01, 0x03, 0x83, 0x2D, 0xC1, 0x02, 0x13, 0x01, 0x01, 0x06, 0x67, 0x80, 0x00, 0x00, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x0B, 0x00, 0x13, 0x06, 0x0A, 0x00, 0x93, 0x86, 0x0A, 0x00, 0x97, 0x00, 0x00, 0x00, 0xE7, 0x80, 0x80, 0x0A, 0x93, 0x05, 0x05, 0x00, 0x13, 0x05, 0x10, 0x00, 0xE3, 0x92, 0x05, 0xFA, 0x83, 0xA6, 0xCB, 0x00, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x09, 0x00, 0x13, 0x06, 0x09, 0x00, 0xE7, 0x80, 0x06, 0x00, 0x93, 0x05, 0x05, 0x00, 0x13, 0x05, 0x10, 0x00, 0xE3, 0x92, 0x05, 0xF8, 0xB3, 0x09, 0x80, 0x41, 0x13, 0x0A, 0xF0, 0xFF, 0x13, 0x09, 0xF0, 0xFF, 0x33, 0x85, 0x29, 0x01, 0x63, 0x0C, 0x45, 0x05, 0x03, 0xA6, 0x0B, 0x01, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x04, 0x00, 0xE7, 0x00, 0x06, 0x00, 0x13, 0x09, 0x19, 0x00, 0xE3, 0x02, 0x05, 0xFE, 0x33, 0x35, 0x89, 0x01, 0x6F, 0xF0, 0x1F, 0xF5, 0x83, 0xA6, 0xCB, 0x00, 0x13, 0x05, 0x0B, 0x00, 0x93, 0x85, 0x09, 0x00, 0x13, 0x06, 0x09, 0x00, 0xE7, 0x80, 0x06, 0x00, 0x93, 0x05, 0x05, 0x00, 0x13, 0x05, 0x10, 0x00, 0xE3, 0x98, 0x05, 0xF2, 0x13, 0x05, 0x00, 0x00, 0x83, 0x25, 0x04, 0xFA, 0x23, 0xA8, 0xB4, 0x00, 0x23, 0x80, 0xA4, 0x03, 0x6F, 0xF0, 0xDF, 0xF1, 0x13, 0x09, 0x0C, 0x00, 0x33, 0x35, 0x8C, 0x01, 0x6F, 0xF0, 0x1F, 0xF1, 0x13, 0x01, 0x01, 0xFE, 0x23, 0x2E, 0x11, 0x00, 0x23, 0x2C, 0x81, 0x00, 0x23, 0x2A, 0x91, 0x00, 0x23, 0x28, 0x21, 0x01, 0x23, 0x26, 0x31, 0x01, 0x13, 0x04, 0x01, 0x02, 0x37, 0x07, 0x11, 0x00, 0x93, 0x84, 0x06, 0x00, 0x13, 0x89, 0x05, 0x00, 0x63, 0x02, 0xE6, 0x02, 0x83, 0x26, 0x09, 0x01, 0x93, 0x09, 0x05, 0x00, 0x93, 0x05, 0x06, 0x00, 0xE7, 0x80, 0x06, 0x00, 0x13, 0x06, 0x05, 0x00, 0x13, 0x85, 0x09, 0x00, 0x93, 0x05, 0x10, 0x00, 0x63, 0x1A, 0x06, 0x02, 0x63, 0x86, 0x04, 0x02, 0x03, 0x23, 0xC9, 0x00, 0x93, 0x85, 0x04, 0x00, 0x13, 0x06, 0x00, 0x00, 0x83, 0x20, 0xC1, 0x01, 0x03, 0x24, 0x81, 0x01, 0x83, 0x24, 0x41, 0x01, 0x03, 0x29, 0x01, 0x01, 0x83, 0x29, 0xC1, 0x00, 0x13, 0x01, 0x01, 0x02, 0x67, 0x00, 0x03, 0x00, 0x93, 0x05, 0x00, 0x00, 0x13, 0x85, 0x05, 0x00, 0x83, 0x20, 0xC1, 0x01, 0x03, 0x24, 0x81, 0x01, 0x83, 0x24, 0x41, 0x01, 0x03, 0x29, 0x01, 0x01, 0x83, 0x29, 0xC1, 0x00, 0x13, 0x01, 0x01, 0x02, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFD, 0x23, 0x26, 0x11, 0x02, 0x23, 0x24, 0x81, 0x02, 0x13, 0x04, 0x01, 0x03, 0x83, 0x25, 0x45, 0x01, 0x03, 0x26, 0x05, 0x01, 0x23, 0x26, 0xB4, 0xFE, 0x23, 0x24, 0xC4, 0xFE, 0x83, 0x25, 0xC5, 0x00, 0x03, 0x26, 0x85, 0x00, 0x83, 0x26, 0x45, 0x00, 0x03, 0x25, 0x05, 0x00, 0x23, 0x22, 0xB4, 0xFE, 0x23, 0x20, 0xC4, 0xFE, 0x23, 0x2E, 0xD4, 0xFC, 0x23, 0x2C, 0xA4, 0xFC, 0x37, 0x15, 0x00, 0x20, 0x13, 0x05, 0x05, 0xF6, 0x23, 0x28, 0xA4, 0xFE, 0x23, 0x1A, 0x04, 0xFE, 0x13, 0x05, 0x84, 0xFD, 0x97, 0xF0, 0xFF, 0xFF, 0xE7, 0x80, 0x40, 0x74, 0x23, 0x20, 0xA1, 0x00, 0x13, 0x05, 0x10, 0x00, 0x23, 0x22, 0xA1, 0x00, 0x23, 0x28, 0x01, 0x00, 0x13, 0x05, 0x40, 0x00, 0x23, 0x24, 0xA1, 0x00, 0x23, 0x26, 0x01, 0x00, 0x67, 0x80, 0x02, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x13, 0x06, 0x00, 0x00, 0x63, 0x00, 0x05, 0x02, 0x93, 0x16, 0xF5, 0x01, 0x93, 0xD6, 0xF6, 0x41, 0xB3, 0xF6, 0xB6, 0x00, 0x33, 0x86, 0xC6, 0x00, 0x13, 0x55, 0x15, 0x00, 0x93, 0x95, 0x15, 0x00, 0xE3, 0x14, 0x05, 0xFE, 0x13, 0x05, 0x06, 0x00, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x13, 0x01, 0x01, 0x01, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x13, 0x01, 0x01, 0x01, 0x17, 0x03, 0x00, 0x00, 0x67, 0x00, 0x83, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x93, 0x06, 0x00, 0x01, 0x63, 0x68, 0xD6, 0x08, 0xB3, 0x06, 0xA0, 0x40, 0x93, 0xF6, 0x36, 0x00, 0x33, 0x07, 0xD5, 0x00, 0x63, 0x80, 0x06, 0x02, 0x93, 0x07, 0x05, 0x00, 0x13, 0x88, 0x05, 0x00, 0x83, 0x48, 0x08, 0x00, 0x23, 0x80, 0x17, 0x01, 0x93, 0x87, 0x17, 0x00, 0x13, 0x08, 0x18, 0x00, 0xE3, 0xE8, 0xE7, 0xFE, 0xB3, 0x85, 0xD5, 0x00, 0x33, 0x06, 0xD6, 0x40, 0x93, 0x77, 0xC6, 0xFF, 0x13, 0xF8, 0x35, 0x00, 0xB3, 0x06, 0xF7, 0x00, 0x63, 0x0C, 0x08, 0x04, 0x63, 0x58, 0xF0, 0x06, 0x93, 0x98, 0x35, 0x00, 0x13, 0xF8, 0x88, 0x01, 0x93, 0xF2, 0xC5, 0xFF, 0x03, 0xA3, 0x02, 0x00, 0xB3, 0x08, 0x10, 0x41, 0x93, 0xF8, 0x88, 0x01, 0x93, 0x82, 0x42, 0x00, 0x83, 0xA3, 0x02, 0x00, 0x33, 0x53, 0x03, 0x01, 0x33, 0x9E, 0x13, 0x01, 0x33, 0x63, 0x6E, 0x00, 0x23, 0x20, 0x67, 0x00, 0x13, 0x07, 0x47, 0x00, 0x93, 0x82, 0x42, 0x00, 0x13, 0x83, 0x03, 0x00, 0xE3, 0x60, 0xD7, 0xFE, 0x6F, 0x00, 0xC0, 0x02, 0x93, 0x06, 0x05, 0x00, 0x63, 0x18, 0x06, 0x02, 0x6F, 0x00, 0x40, 0x04, 0x63, 0x5E, 0xF0, 0x00, 0x13, 0x88, 0x05, 0x00, 0x83, 0x28, 0x08, 0x00, 0x23, 0x20, 0x17, 0x01, 0x13, 0x07, 0x47, 0x00, 0x13, 0x08, 0x48, 0x00, 0xE3, 0x68, 0xD7, 0xFE, 0xB3, 0x85, 0xF5, 0x00, 0x13, 0x76, 0x36, 0x00, 0x63, 0x0E, 0x06, 0x00, 0x33, 0x86, 0xC6, 0x00, 0x03, 0xC7, 0x05, 0x00, 0x23, 0x80, 0xE6, 0x00, 0x93, 0x86, 0x16, 0x00, 0x93, 0x85, 0x15, 0x00, 0xE3, 0xE8, 0xC6, 0xFE, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x13, 0x01, 0x01, 0x01, 0x67, 0x80, 0x00, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x13, 0x01, 0x01, 0x01, 0x17, 0x03, 0x00, 0x00, 0x67, 0x00, 0x83, 0x00, 0x13, 0x01, 0x01, 0xFF, 0x23, 0x26, 0x11, 0x00, 0x23, 0x24, 0x81, 0x00, 0x13, 0x04, 0x01, 0x01, 0x13, 0x06, 0x05, 0x00, 0x63, 0x76, 0xB5, 0x00, 0x13, 0x05, 0x00, 0x00, 0x6F, 0x00, 0x40, 0x11, 0x13, 0x57, 0x06, 0x01, 0x33, 0x35, 0xB7, 0x00, 0x93, 0x46, 0x15, 0x00, 0x13, 0x05, 0x06, 0x00, 0x63, 0x64, 0xB7, 0x00, 0x13, 0x05, 0x07, 0x00, 0x93, 0x96, 0x46, 0x00, 0x93, 0x57, 0x85, 0x00, 0x33, 0xB7, 0xB7, 0x00, 0x13, 0x47, 0x17, 0x00, 0x63, 0xE4, 0xB7, 0x00, 0x13, 0x85, 0x07, 0x00, 0x13, 0x17, 0x37, 0x00, 0xB3, 0x66, 0xD7, 0x00, 0x93, 0x57, 0x45, 0x00, 0x33, 0xB7, 0xB7, 0x00, 0x13, 0x47, 0x17, 0x00, 0x63, 0xE4, 0xB7, 0x00, 0x13, 0x85, 0x07, 0x00, 0x13, 0x17, 0x27, 0x00, 0xB3, 0xE6, 0xE6, 0x00, 0x93, 0x57, 0x25, 0x00, 0x33, 0xB7, 0xB7, 0x00, 0x13, 0x47, 0x17, 0x00, 0x63, 0xE4, 0xB7, 0x00, 0x13, 0x85, 0x07, 0x00, 0x13, 0x17, 0x17, 0x00, 0x13, 0x55, 0x15, 0x00, 0x33, 0x35, 0xB5, 0x00, 0x13, 0x45, 0x15, 0x00, 0x33, 0x65, 0xA7, 0x00, 0xB3, 0xE6, 0xA6, 0x00, 0x33, 0x97, 0xD5, 0x00, 0x33, 0x06, 0xE6, 0x40, 0x13, 0x05, 0x10, 0x00, 0x33, 0x15, 0xD5, 0x00, 0x63, 0x60, 0xB6, 0x08, 0x63, 0x46, 0x07, 0x00, 0x93, 0x07, 0x05, 0x00, 0x6F, 0x00, 0x80, 0x03, 0x13, 0x57, 0x17, 0x00, 0x93, 0x86, 0xF6, 0xFF, 0x93, 0x07, 0x10, 0x00, 0xB3, 0x97, 0xD7, 0x00, 0x33, 0x08, 0xE6, 0x40, 0x93, 0x28, 0x08, 0x00, 0x93, 0x88, 0xF8, 0xFF, 0xB3, 0xF8, 0xF8, 0x00, 0x63, 0x54, 0x08, 0x00, 0x13, 0x08, 0x06, 0x00, 0x33, 0xE5, 0xA8, 0x00, 0x13, 0x06, 0x08, 0x00, 0x63, 0x60, 0xB8, 0x04, 0x93, 0x87, 0xF7, 0xFF, 0x63, 0x86, 0x06, 0x02, 0x93, 0x85, 0x06, 0x00, 0x6F, 0x00, 0xC0, 0x00, 0x93, 0x85, 0xF5, 0xFF, 0x63, 0x8E, 0x05, 0x00, 0x13, 0x16, 0x16, 0x00, 0x33, 0x08, 0xE6, 0x40, 0x13, 0x08, 0x18, 0x00, 0xE3, 0x46, 0x08, 0xFE, 0x13, 0x06, 0x08, 0x00, 0x6F, 0xF0, 0x5F, 0xFE, 0xB3, 0x77, 0xF6, 0x00, 0x33, 0xE5, 0xA7, 0x00, 0x33, 0x56, 0xD6, 0x00, 0x93, 0x05, 0x06, 0x00, 0x83, 0x20, 0xC1, 0x00, 0x03, 0x24, 0x81, 0x00, 0x13, 0x01, 0x01, 0x01, 0x67, 0x80, 0x00, 0x00, 0x49, 0x6E, 0x76, 0x61, 0x6C, 0x69, 0x64, 0x20, 0x61, 0x72, 0x67, 0x75, 0x6D, 0x65, 0x6E, 0x74, 0x73, 0x00, 0x00, 0x00, 0x54, 0x0E, 0x00, 0x20, 0x11, 0x00, 0x00, 0x00, 0x73, 0x72, 0x63, 0x2F, 0x6D, 0x61, 0x69, 0x6E, 0x2E, 0x72, 0x73, 0x00, 0x70, 0x0E, 0x00, 0x20, 0x0B, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x20, 0x0B, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x68, 0x65, 0x6C, 0x6C, 0x6F, 0x20, 0x55, 0x6E, 0x6B, 0x6E, 0x6F, 0x77, 0x6E, 0x20, 0x66, 0x75, 0x6E, 0x63, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x00, 0xA2, 0x0E, 0x00, 0x20, 0x10, 0x00, 0x00, 0x00, 0x70, 0x0E, 0x00, 0x20, 0x0B, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x20, 0x6F, 0x76, 0x65, 0x72, 0x66, 0x6C, 0x6F, 0x77, 0x00, 0x00, 0x00, 0xCC, 0x0E, 0x00, 0x20, 0x11, 0x00, 0x00, 0x00, 0x6C, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2F, 0x61, 0x6C, 0x6C, 0x6F, 0x63, 0x2F, 0x73, 0x72, 0x63, 0x2F, 0x72, 0x61, 0x77, 0x5F, 0x76, 0x65, 0x63, 0x2E, 0x72, 0x73, 0xE8, 0x0E, 0x00, 0x20, 0x1C, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x6C, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2F, 0x61, 0x6C, 0x6C, 0x6F, 0x63, 0x2F, 0x73, 0x72, 0x63, 0x2F, 0x61, 0x6C, 0x6C, 0x6F, 0x63, 0x2E, 0x72, 0x73, 0x6D, 0x65, 0x6D, 0x6F, 0x72, 0x79, 0x20, 0x61, 0x6C, 0x6C, 0x6F, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x20, 0x6F, 0x66, 0x20, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x66, 0x61, 0x69, 0x6C, 0x65, 0x64, 0x2E, 0x0F, 0x00, 0x20, 0x15, 0x00, 0x00, 0x00, 0x43, 0x0F, 0x00, 0x20, 0x0D, 0x00, 0x00, 0x00, 0x14, 0x0F, 0x00, 0x20, 0x1A, 0x00, 0x00, 0x00, 0xA4, 0x01, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x31, 0x30, 0x32, 0x30, 0x33, 0x30, 0x34, 0x30, 0x35, 0x30, 0x36, 0x30, 0x37, 0x30, 0x38, 0x30, 0x39, 0x31, 0x30, 0x31, 0x31, 0x31, 0x32, 0x31, 0x33, 0x31, 0x34, 0x31, 0x35, 0x31, 0x36, 0x31, 0x37, 0x31, 0x38, 0x31, 0x39, 0x32, 0x30, 0x32, 0x31, 0x32, 0x32, 0x32, 0x33, 0x32, 0x34, 0x32, 0x35, 0x32, 0x36, 0x32, 0x37, 0x32, 0x38, 0x32, 0x39, 0x33, 0x30, 0x33, 0x31, 0x33, 0x32, 0x33, 0x33, 0x33, 0x34, 0x33, 0x35, 0x33, 0x36, 0x33, 0x37, 0x33, 0x38, 0x33, 0x39, 0x34, 0x30, 0x34, 0x31, 0x34, 0x32, 0x34, 0x33, 0x34, 0x34, 0x34, 0x35, 0x34, 0x36, 0x34, 0x37, 0x34, 0x38, 0x34, 0x39, 0x35, 0x30, 0x35, 0x31, 0x35, 0x32, 0x35, 0x33, 0x35, 0x34, 0x35, 0x35, 0x35, 0x36, 0x35, 0x37, 0x35, 0x38, 0x35, 0x39, 0x36, 0x30, 0x36, 0x31, 0x36, 0x32, 0x36, 0x33, 0x36, 0x34, 0x36, 0x35, 0x36, 0x36, 0x36, 0x37, 0x36, 0x38, 0x36, 0x39, 0x37, 0x30, 0x37, 0x31, 0x37, 0x32, 0x37, 0x33, 0x37, 0x34, 0x37, 0x35, 0x37, 0x36, 0x37, 0x37, 0x37, 0x38, 0x37, 0x39, 0x38, 0x30, 0x38, 0x31, 0x38, 0x32, 0x38, 0x33, 0x38, 0x34, 0x38, 0x35, 0x38, 0x36, 0x38, 0x37, 0x38, 0x38, 0x38, 0x39, 0x39, 0x30, 0x39, 0x31, 0x39, 0x32, 0x39, 0x33, 0x39, 0x34, 0x39, 0x35, 0x39, 0x36, 0x39, 0x37, 0x39, 0x38, 0x39, 0x39, 0x00, 0x2E, 0x74, 0x65, 0x78, 0x74, 0x00, 0x2E, 0x73, 0x62, 0x73, 0x73, 0x00, 0x2E, 0x73, 0x74, 0x61, 0x63, 0x6B, 0x00, 0x2E, 0x68, 0x65, 0x61, 0x70, 0x00, 0x2E, 0x69, 0x6E, 0x5F, 0x6E, 0x61, 0x6D, 0x65, 0x5F, 0x6C, 0x65, 0x6E, 0x00, 0x2E, 0x69, 0x6E, 0x5F, 0x6E, 0x61, 0x6D, 0x65, 0x00, 0x2E, 0x69, 0x6E, 0x5F, 0x61, 0x72, 0x67, 0x73, 0x5F, 0x6C, 0x65, 0x6E, 0x00, 0x2E, 0x69, 0x6E, 0x5F, 0x61, 0x72, 0x67, 0x73, 0x00, 0x2E, 0x73, 0x68, 0x73, 0x74, 0x72, 0x74, 0x61, 0x62, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xB4, 0x00, 0x00, 0x00, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x38, 0x10, 0x00, 0x20, 0xEC, 0x10, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x10, 0x00, 0x20, 0xEC, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x40, 0x10, 0x00, 0x20, 0xEC, 0x10, 0x00, 0x00, 0xC0, 0xEF, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xEC, 0x10, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x10, 0xEC, 0x10, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x10, 0xEC, 0x10, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x01, 0x00, 0x10, 0xEC, 0x10, 0x00, 0x00, 0xF9, 0xFE, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEC, 0x10, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    ];


    // Test the "prepend_hello" function
    // This function prepends "hello " to the input and returns the result.
    // Note: this function makes use of dynamic memory allocation.
    {
        let func_name: ByteArray = "prepend_hello";
        println!("=== Testing function {}", func_name);
        let args: ByteArray = "world";
        let res = run_elf(@arr, @func_name, @args);
        if res != "hello world" {
            panic!("Function {} failed", func_name);
        }
        println!("Function {} succeeded", func_name);
    }

    // Test the "add" function
    // This function adds the two first bytes of the input and returns the result
    {
        let func_name: ByteArray = "add";
        println!("=== Testing function {}", func_name);
        let mut args: ByteArray = "";
        args.append_byte(2);
        args.append_byte(3);
        let res = run_elf(@arr, @func_name, @args);
        if res.len() != 1 || res[0] != args[0]+args[1] {
            panic!("Function {} failed", func_name);
        }
        println!("Function {} succeeded", func_name);
    }

    // Test the "sub" function
    // This function subtracts the second byte from the first one in the input and returns the result
    {
        let func_name: ByteArray = "sub";
        println!("=== Testing function {}", func_name);
        let mut args: ByteArray = "";
        args.append_byte(100);
        args.append_byte(40);
        let res = run_elf(@arr, @func_name, @args);
        if res.len() != 1 || res[0] != args[0]-args[1] {
            panic!("Function {} failed", func_name);
        }
        println!("Function {} succeeded", func_name);
    }


    0
}

fn write_args_to_ram(ref machine: RISCVMachine, input_func: @ByteArray, input_args: @ByteArray) {
    let input_func_len = input_func.len();
    let input_args_len = input_args.len();

    // set the input length in RAM. Warning: little endian
    machine.mem_set(IN_FUNCT_NAME_LEN_OFFSET+0, (input_func_len & 0x000000FF).try_into().unwrap());
    machine.mem_set(IN_FUNCT_NAME_LEN_OFFSET+1, ((input_func_len & 0x0000FF00) / 256).try_into().unwrap());
    machine.mem_set(IN_FUNCT_NAME_LEN_OFFSET+2, ((input_func_len & 0x00FF0000) / 65536).try_into().unwrap());
    machine.mem_set(IN_FUNCT_NAME_LEN_OFFSET+3, ((input_func_len & 0xFF000000) / 16777216).try_into().unwrap());

    // set the func name in RAM using a loop
    let mut i: u32 = 0;
    loop {
        if i >= input_func_len {
            break;
        }
        machine.mem_set(IN_FUNCT_NAME_OFFSET+i, input_func[i]);
        i += 1;
    };

    // set the input args length in RAM. Warning: little endian
    machine.mem_set(IN_FUNCT_ARGS_LEN_OFFSET+0, (input_args_len & 0x000000FF).try_into().unwrap());
    machine.mem_set(IN_FUNCT_ARGS_LEN_OFFSET+1, ((input_args_len & 0x0000FF00) / 256).try_into().unwrap());
    machine.mem_set(IN_FUNCT_ARGS_LEN_OFFSET+2, ((input_args_len & 0x00FF0000) / 65536).try_into().unwrap());
    machine.mem_set(IN_FUNCT_ARGS_LEN_OFFSET+3, ((input_args_len & 0xFF000000) / 16777216).try_into().unwrap());

    // set the input args in RAM using a loop
    let mut j: u32 = 0;
    loop {
        if j >= input_args_len {
            break;
        }
        machine.mem_set(IN_FUNCT_ARGS_OFFSET+j, input_args[j]);
        j += 1;
    };
}


fn run_elf(elf_arr: @Array::<u8>, func_name: @ByteArray, args: @ByteArray) -> ByteArray {
    let mut machine = RISCVMachineTrait::new();
    let mut elf_loader = ELFLoaderTrait::new();

    // load elf
    let res = elf_loader.load(elf_arr, ref machine);
    if !res {
        panic!("Failed to load ELF");
    }

    // set the input data in RAM
    write_args_to_ram(ref machine, func_name, args);

    // run the machine
    let res = loop {
        let (instr, ctl) = machine.step();
        println!("Finished running machine instr: {}", instr);
        match ctl {
            FlowControl::Continue => {},
            FlowControl::InvalidInstruction => {
                panic!("Invalid instruction");
            },
            FlowControl::ECall => {
                println!("ECall");
                
                // read output
                let category: u32 = machine.get_r(10).unwrap();
                let len: u32 = machine.get_r(11).unwrap();
                let addr: u32 = machine.get_r(12).unwrap();
                let mut res_bytes: ByteArray = "";
                let mut i: u32 = 0;
                loop {
                    if i >= len {
                        break;
                    }
                    let v = machine.mem_get(addr + i);
                    res_bytes.append_byte(v);
                    i += 1;
                };
                if category == ECALL_CATEGORY_PANIC {
                    panic!("Guest panicked: {}", res_bytes);
                } else if category == ECALL_CATEGORY_RETURN {
                    println!("Return: {}", res_bytes);
                    break res_bytes;
                } else {
                    panic!("Unknown ecall category: {}", category);
                }
            },
            FlowControl::EBreak => { println!("EBreak"); },
            FlowControl::URet => { println!("URet"); },
            FlowControl::SRet => { println!("SRet"); },
            FlowControl::MRet => { println!("MRet"); },
            FlowControl::Wfi => {
                println!("MRet");
            },
        };
    };

    res
}
